{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 第一题\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "脸黑怪我咯7张蓝票一个SSR都没有\n"
     ]
    }
   ],
   "source": [
    "slogan = '脸黑怪我咯'\n",
    "number = '7.8'\n",
    "unit = '张'\n",
    "sentence = '蓝票一个SSR都没有'\n",
    "word = slogan + str(int(float(number))) + str(unit) + sentence\n",
    "print(word)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 第二题\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "请输入工资80\n",
      "欢迎进入史塔克穷人帮前三名\n",
      "恭喜您荣获“美元队长”称号！\n",
      "程序结束\n"
     ]
    }
   ],
   "source": [
    "salary = int(input('请输入工资'))\n",
    "if salary <= 500:\n",
    "    print('欢迎进入史塔克穷人帮前三名') \n",
    "    if salary <= 100:\n",
    "        print('恭喜您荣获“美元队长”称号！') \n",
    "    else:\n",
    "        print('请找弗瑞队长加薪') \n",
    "elif 500 < salary <= 1000:\n",
    "    print('祝贺您至少可以温饱了。')\n",
    "elif salary > 1000:\n",
    "    print('经济危机都难不倒您！')\n",
    "    if 1000 < salary <= 20000:\n",
    "        print('您快比钢铁侠有钱了！')  \n",
    "    else:\n",
    "        print('您是不是来自于瓦坎达国？')\n",
    "print('程序结束')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 第三题"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "您好，欢迎古灵阁，请问需要帮助吗？需要or不需要？需要\n",
      "请问您需要什么帮助呢？1 存取款；2 货币兑换；3 咨询1\n",
      "请到存取款窗口办理\n"
     ]
    }
   ],
   "source": [
    "chioce = input('您好，欢迎古灵阁，请问需要帮助吗？需要or不需要？')\n",
    "if chioce == '需要':\n",
    "    number = input('请问您需要什么帮助呢？1 存取款；2 货币兑换；3 咨询')\n",
    "    if number == '2':\n",
    "        print('金加隆和人民币的兑换率为1:51.3，即一金加隆=51.3人民币')\n",
    "        print('请问您需要兑换多少金加隆呢？')\n",
    "        money = input('请输入你需要兑换的金加隆')\n",
    "        print('好的，我知道了，您需要兑换' + money + '金加隆。')\n",
    "        print('那么，您需要付给我'+str(int(float(money)*51.3))+'人民币。')\n",
    "    elif number == '1':\n",
    "        print('请到存取款窗口办理')\n",
    "    elif number == '3':\n",
    "        print('请到咨询窗口咨询')\n",
    "    else:\n",
    "        print('输入错误，没有你需要的服务')\n",
    "\n",
    "elif chioce == '不需要':\n",
    "    print('好的，再见')\n",
    "\n",
    "else:\n",
    "    print('输入错误')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 第四题\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "狼\n"
     ]
    }
   ],
   "source": [
    "townee = [\n",
    "    {'海底王国':['小美人鱼''海之王''小美人鱼的祖母''五位姐姐'],'上层世界':['王子','邻国公主']}, '丑小鸭','坚定的锡兵','睡美人','青蛙王子',  [{'主角':'小红帽','配角1':'外婆','配角2':'猎人'},{'反面角色':'狼'}] ]\n",
    "print(townee[5][1]['反面角色'])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 第五题\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "你想查询哪个演员？雷佳音\n",
      "雷佳音出演了电影妖猫传\n",
      "雷佳音出演了电影超时空同居\n"
     ]
    }
   ],
   "source": [
    "movies = {\n",
    "'妖猫传':['黄轩','染谷将太','雷佳音'],\n",
    "'无问西东':['章子怡','王力宏','祖峰'],\n",
    "'超时空同居':['雷佳音','佟丽娅'],\n",
    "}\n",
    "\n",
    "\n",
    "actor = input('你想查询哪个演员？')\n",
    "for  movie in movies:\n",
    "    actors = movies[movie]\n",
    "    if actor in actors:\n",
    "        print(actor + '出演了电影' + movie)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 第六题\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[91, 92, 93, 95, 96, 97, 98, 99]\n"
     ]
    }
   ],
   "source": [
    "list1 =  [91, 95, 97, 99]  \n",
    "list2 =  [92, 93, 96, 98]\n",
    "# 把 A 组成绩赋值给一个新列表，用来存合并的成绩——这个细节要注意！\n",
    "list3 =list1\n",
    "list3.extend(list2)\n",
    "list3.sort()\n",
    "print(list3)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# 第七题\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "平均成绩是：95.125\n",
      "低于平均成绩的有：[91, 92, 93, 95]\n"
     ]
    }
   ],
   "source": [
    "import numpy as np\n",
    "\n",
    "scores1 = list3\n",
    "scores2 = []\n",
    "\n",
    "\n",
    "average = np.mean(scores1)  # 一行解决。\n",
    "print('平均成绩是：{}'.format(average))\n",
    "\n",
    "\n",
    "for score in scores1:\n",
    "    if score < average:\n",
    "        scores2.append(score)\n",
    "        continue\n",
    "print('低于平均成绩的有：{}'.format(scores2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  },
  "toc": {
   "base_numbering": 1,
   "nav_menu": {},
   "number_sections": true,
   "sideBar": true,
   "skip_h1_title": false,
   "title_cell": "Table of Contents",
   "title_sidebar": "Contents",
   "toc_cell": false,
   "toc_position": {},
   "toc_section_display": true,
   "toc_window_display": false
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
